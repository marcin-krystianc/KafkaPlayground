{
  "realm": "demo",
  "accessTokenLifespan": 30,
  "ssoSessionMaxLifespan": 32140800,
  "ssoSessionIdleTimeout": 32140800,
  "enabled": true,
  "sslRequired": "external",
  "users": [
    {
      "username": "alice",
      "enabled": true,
      "email": "alice@example.com",
      "credentials": [
        {
          "type": "password",
          "value": "alice-password"
        }
      ],
      "realmRoles": [
        "user"
      ],
      "clientRoles": {
        "kafka": [
          "kafka-topic:superapp_*:owner"
        ]
      }
    },
    {
      "username": "admin",
      "enabled": true,
      "email": "admin@example.com",
      "credentials": [
        {
          "type": "password",
          "value": "admin-password"
        }
      ],
      "realmRoles": [
        "admin"
      ],
      "clientRoles": {
        "realm-management": [
          "realm-admin"
        ],
        "kafka": [
          "kafka-admin"
        ]
      }
    },
    {
      "username": "service-account-kafka-broker",
      "enabled": true,
      "email": "service-account-kafka-broker@placeholder.org",
      "serviceAccountClientId": "kafka-broker",
      "clientRoles": {
        "kafka" : ["kafka-admin"]
      }
    },
    {
      "username": "service-account-kafka-producer-client",
      "enabled": true,
      "email": "service-account-kafka-producer-client@placeholder.org",
      "serviceAccountClientId": "kafka-producer-client"
    },
    {
      "username": "service-account-kafka-consumer-client",
      "enabled": true,
      "email": "service-account-kafka-consumer-client@placeholder.org",
      "serviceAccountClientId": "kafka-consumer-client",
      "clientRoles": {
        "kafka" : ["kafka-topic:superapp_*:consumer"]
      }
    }
  ],
  "roles": {
    "realm": [
      {
        "name": "user",
        "description": "User privileges"
      },
      {
        "name": "admin",
        "description": "Administrator privileges"
      }
    ],
    "client": {
      "kafka": [
        {
          "name": "kafka-admin",
          "description": "Kafka administrator - can perform any action on any Kafka resource",
          "clientRole": true
        },
        {
          "name": "kafka-topic:superapp_*:owner",
          "description": "Owner of topics that begin with 'superapp_' prefix. Can perform any operation on these topics.",
          "clientRole": true
        },
        {
          "name": "kafka-topic:superapp_*:consumer",
          "description": "Consumer of topics that begin with 'superapp_' prefix. Can perform READ, and DESCRIBE on these topics.",
          "clientRole": true
        }
      ]
    }
  },
  "scopeMappings": [
    {
      "client": "kafka-broker",
      "roles": [
        "offline_access"
      ]
    },
    {
      "client": "kafka-producer-client",
      "roles": [
        "offline_access"
      ]
    },
    {
      "client": "kafka-consumer-client",
      "roles": [
        "offline_access"
      ]
    },
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "kafka": [
      {
        "client": "kafka-broker",
        "roles": [
          "kafka-admin"
        ]
      },
      {
        "client": "kafka-consumer-client",
        "roles": [
          "kafka-topic:superapp_*:consumer"
        ]
      },
      {
        "client": "kafka-producer-client",
        "roles": [
          "kafka-topic:superapp_*:owner"
        ]
      }
    ]
  },
  "clients": [
    {
      "clientId": "kafka",
      "enabled": true,
      "publicClient": true,
      "bearerOnly": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "consentRequired" : false,
      "fullScopeAllowed" : false
    },
    {
      "clientId": "kafka-broker",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "kafka-broker-secret",
      "publicClient": false,
      "bearerOnly": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "consentRequired" : false,
      "fullScopeAllowed" : false,
      "attributes": {
        "access.token.lifespan": "31"
      }
    },
    {
      "clientId": "kafka-producer-client",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "kafka-producer-client-secret",
      "publicClient": false,
      "bearerOnly": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "consentRequired" : false,
      "fullScopeAllowed" : false,
      "attributes": {
        "access.token.lifespan": "31"
      }
    },
    {
      "clientId": "kafka-consumer-client",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "kafka-consumer-client-secret",
      "publicClient": false,
      "bearerOnly": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "consentRequired" : false,
      "fullScopeAllowed" : false,
      "attributes": {
        "access.token.lifespan": "31"
      }
    },
    {
      "clientId": "kafka-consumer-client-jwt",
      "enabled": true,
      "clientAuthenticatorType": "client-jwt",         
      "publicClient": false,
      "bearerOnly": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "consentRequired" : false,
      "fullScopeAllowed" : false,
      "attributes": {
        "access.token.lifespan": "31",
		 "jwt.credential.certificate": "MIIDCTCCAfGgAwIBAgIULYiu/WILDEKyzhykr1La6SweSXswDQYJKoZIhvcNAQELBQAwFDESMBAGA1UEAwwJbXktY2xpZW50MB4XDTI1MDUyODE0MTUxOVoXDTI2MDUyODE0MTUxOVowFDESMBAGA1UEAwwJbXktY2xpZW50MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1NRYFirQN4evJa5Oi95WVZ0ZPNhil87IMMnOn0SQ7/e+nb3F60d4ZTn6cl55iCs/KIXAGwcR4bweV5wHdBGCsnl1lxSnv8MZVOtzXm3pT/8e4afbtyl/5S1L4UzJWr68sAlR7mdhpxmIC1gIhbeVL7PE7TfMyUSQpSVU1yyenJn+nzXJKXhs8/q+1YYm8fitSMTnQHSlbN3w816RQ7ghzi7yo6Ek1iJ/N/COPinw7ks+Hw5gRk8B0yVAEt6M17xDF2zxXPSqlVySIe6QQouqRZ2zMEJMJLGhywwLVUAAZFZrKstbXtbazvV6LxyMilYUlfm7eytATDuAEm4AFTOw2QIDAQABo1MwUTAdBgNVHQ4EFgQUHNscqJwsJ2X48YLgOPTCPA1ObnQwHwYDVR0jBBgwFoAUHNscqJwsJ2X48YLgOPTCPA1ObnQwDwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAQEANFW+0yR1eKxcetGZ/WwPF+87BHKxFgQ/GVhY7/osHmk/9I0yD2qF+VzTbtIexbG311z0sq7EGnXhq9hHveSXh/iHzIfcsjZnB4BwtRnIpwYQ8/6p2fuQYchtj4AayfCGGmOsrCDDyCifd/enlUrEBG/G4E3uvPqZr+/T8gDD/IUHG2YdaR6+CBQCAVhxg6iOqQH1vHI2Xkfdr+1lY8F+QO7pPCF+Tyj/HGE6Z+Uqcdhu9B0VTn/fQseF8kn/swkM08srh3FixrbpvJ+3PxrPA2BGOEEvBfabaJnQAooqookSfqlr+1J3a/nC3A0NThYLc88BvbRmdtmyFsgciF/4Zg=="
      }
    }
  ]
}